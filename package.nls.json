{
    "cosmy-wasmy.addAccount.title": "Add Account",
    "cosmy-wasmy.requestFunds.title": "Request Funds",
    "cosmy-wasmy.openInExplorer.title": "Open In Explorer",
    "cosmy-wasmy.copyAddress.title": "Copy Address",
    "cosmy-wasmy.copyMnemonic.title": "Copy Mnemonic",
    "cosmy-wasmy.deleteAccount.title": "Delete Account",
    "cosmy-wasmy.sendTokens.title": "Send Tokens",
    "cosmy-wasmy.refreshAccount.title": "Refresh Account View",
    "cosmy-wasmy.addContract.title": "Import Contract",
    "cosmy-wasmy.addContractsAll.title": "Import Contracts - All",
    "cosmy-wasmy.deleteContract.title": "Delete Contract",
    "cosmy-wasmy.updateContractAdmin.title": "Update Admin",
    "cosmy-wasmy.clearContractAdmin.title": "Clear Admin",
    "cosmy-wasmy.getContractChecksum.title": "Display Checksum",
    "cosmy-wasmy.downloadContractBinary.title": "Download Contract Binary",
    "cosmy-wasmy.reloadConfig.title": "Reload Chain Config",
    "cosmy-wasmy.resetData.title": "Reset Data",
    "cosmy-wasmy.build.title": "Build",
    "cosmy-wasmy.runUnitTests.title": "Run Unit Tests",
    "cosmy-wasmy.optimizeContract.title": "Optimize Contract",
    "cosmy-wasmy.generateSchema.title": "Generate Schema",
    "cosmy-wasmy.setupDevEnv.title": "Setup Dev Environment",
    "cosmy-wasmy.upload.title": "Upload Contract",
    "cosmy-wasmy.wasmInteract.title": "Load in Virtual Machine",
    "cosmy-wasmy.history.title": "Show Cosmwasm History",
    "cosmy-wasmy.export.title": "Export accounts, contracts and history as JSON",
    "cosmy-wasmy.addComments.title": "Add comments/notes for the contract",
    "cosmy-wasmy.queryCosmwasm.title": "Run Query",
    "cosmy-wasmy.execCosmwasm.title": "Execute Tx",
    "cosmy-wasmy.beakerTomlSync.title": "Sync Beaker config",
    "cosmy-wasmy.createCwNotebook.title": "Create a new CW Notebook",
    "cosmy-wasmy.encodeToBase64.title": "Encode to Base64",
    "cosmy-wasmy.capabilities.trustedWorkspace.description": "The Cosmy Wasmy sidebar commands will work while in untrusted workspaces. However, cannot run tests or upload contract binaries when in untrusted workspaces. Additionally, JSON auto complete might also not work.",

    "cosmywasmy.chainConfigName.desc": "Used to select which of the Chain configs in `#cosmywasmy.chains#` is to be used in this workspace",
    "cosmywasmy.chainConfigName.deprecationDesc": "This property is not used anymore in fetching the workspace chain config. Click on the Status bar item to select the chain config you require.",
    "cosmywasmy.chains.desc": "List of chain configs",
    "cosmywasmy.chains.items.title": "Chain Info",
    "cosmywasmy.chains.items.configName.desc": "User friendly name for the saved network config. Use as input to `cosmywasmy.chainConfigName` to select this config to be used in the workspace.",
    "cosmywasmy.chains.items.chainId.desc": "Chain ID",
    "cosmywasmy.chains.items.chainEnvironment.desc": "Is the chain localnet, testnet or (god forbid üò®) mainnet",
    "cosmywasmy.chains.items.chainEnvironment.localnet.desc": "The chain is running locally on your system",
    "cosmywasmy.chains.items.chainEnvironment.testnet.desc": "The chain is a testnet chain",
    "cosmywasmy.chains.items.chainEnvironment.mainnet.desc": "The chain is mainnet. DO NOT CONNECT MAINNETS to the extension unless you are super sure you know what you are doing. The extension saves the seed phrase in plain text.",
    "cosmywasmy.chains.items.addressPrefix.desc": "Prefix used by the chain",
    "cosmywasmy.chains.items.rpcEndpoint.desc": "RPC address and port where the chain RPC server listens on",
    "cosmywasmy.chains.items.defaultGasPrice.desc": "Default amount of gas to be used as the gas limit for a transaction",
    "cosmywasmy.chains.items.chainDenom.desc": "The micro denom used to track account balance. If chainGasDenom is not provided, this value is used as gas denom",
    "cosmywasmy.chains.items.chainGasDenom.desc": "The micro denom used to pay for gas. If this value is not provided, the `chainDenom` value is used",
    "cosmywasmy.chains.items.chainDenomDecimals.desc": "Default decimals to display account balance",
    "cosmywasmy.chains.items.signType.desc": "The signature algorithm when signing transactions, `ethsecp256k1` or `tmsecp256k1`, default `tmsecp256k1`",
    "cosmywasmy.chains.items.signType.tmsecp256k1.desc": "Used for Cosmos/Tendermint chains signing",
    "cosmywasmy.chains.items.signType.ethsecp256k1.desc": "Used for Ethereum/EVM chains signing",
    "cosmywasmy.chains.items.coinType.desc": "Used for distinguishing between different cryptocurrencies in hierarchical deterministic wallets, default `118`",
    "cosmywasmy.chains.items.faucetEndpoint.desc": "Faucet address and port to request funds",
    "cosmywasmy.chains.items.accountExplorerLink.desc": "Block explorer url which includes '${accountAddress}' text to generate account url",
    "cosmywasmy.chains.items.txExplorerLink.desc": "Block explorer url which includes '${txHash}' text to generate tx url",
    "cosmywasmy.contractSortOrder.desc": "Controls the sorting order of the Smart Contracts in the Contract view",
    "cosmywasmy.contractSortOrder.alphabetical.desc": "Sort the Smart Contracts alphabetically by their label",
    "cosmywasmy.contractSortOrder.codeId.desc": "Sort the Smart Contracts by the Code ID",
    "cosmywasmy.contractSortOrder.none.desc": "No explicit sorting - Maintains the order the contracts were imported in",
    "cosmywasmy.cosmwasmResponseView.desc": "Controls where the smart contract interactions should be displayed",
    "cosmywasmy.cosmwasmResponseView.newFile.desc": "Open a new dummy doc with response",
    "cosmywasmy.cosmwasmResponseView.terminal.desc": "A seperate output channel by Cosmy Wasmy in the Output view",
    "cosmywasmy.maxHistoryStored.desc": "Controls the latest number of queries and txs kept in history for easy re-execution. If set to `0` the feature is disabled and nothing is stored",
    "cosmywasmy.openTxExplorerInVscode.desc": "If this setting is set, and the current chain config has `txExplorerLink` value set, on the successful execution of a msg, the tx explorer link opens automatically within vscode in simple browser",
    "beaker.autosync.desc": "If this setting is set, any accounts configured in [Beaker.toml](https://github.com/osmosis-labs/beaker/blob/main/docs/config/README.md) will be automatically loaded into Cosmy Wasmy",

    "cosmywasmy.viewsWelcome.account.desc": "‚ö†Ô∏è Looks like there are no accounts set up. \n [Add an account](command:cosmy-wasmy.addAccount)",
    "cosmywasmy.viewsWelcome.contract.desc": "‚ö†Ô∏è Looks like there are no imported contracts. \n [Import a contract](command:cosmy-wasmy.addContract)",

    "cosmywasmy.walkthroughs.title": "Getting Started with Cosmy Wasmy",
    "cosmywasmy.walkthroughs.description": "Discover how to use Cosmy Wasmy and what all it offers",
    
    "cosmywasmy.walkthroughs.primary.openCWView.title": "Open Cosmy Wasmy",
    "cosmywasmy.walkthroughs.primary.openCWView.description": "Click on the Cosmy Wasmy logo in the Activity Bar/sidebar to open the extension",
    "cosmywasmy.walkthroughs.primary.createKey.title": "Add Account",
    "cosmywasmy.walkthroughs.primary.createKey.description": "Create a new key. You can import an existing seed phrase or generate a new one. \n[Add Account](command:cosmy-wasmy.addAccount)",
    "cosmywasmy.walkthroughs.primary.changeChain.title": "Change Active Chain",
    "cosmywasmy.walkthroughs.primary.changeChain.description": "Change the chain the current workspace is connected to. You can select the chain in the status bar below.\nThe chains are organized by localnet, testnet, mainnet and Beaker imported chain configs. \n[Change Chain Config](command:cosmy-wasmy.reloadConfig)",
    "cosmywasmy.walkthroughs.primary.importContract.title": "Import Contract",
    "cosmywasmy.walkthroughs.primary.importContract.description": "Import a contract which have already been deployed by their bech32 address. \n[Import Contract](command:cosmy-wasmy.addContract)",
    "cosmywasmy.walkthroughs.primary.executeContract.title": "Execute Contract",
    "cosmywasmy.walkthroughs.primary.executeContract.description": "Select a contract from the Contract view and an account from the Account view as currently active contract and account and input your execute json and click on ``Execute`` button to execute the contract tx.\nYou can also pass in funds if your contract requires any.\nThe response from the contract is shown in the Output channel and you can see the txHash in the notification.",
    "cosmywasmy.walkthroughs.primary.simulateContract.title": "Simulate Contract",
    "cosmywasmy.walkthroughs.primary.simulateContract.description": "Right click on a wasm binary to get the option to simulate the binary in the Cosmwasm VM within vscode",

    
    "cosmywasmy.walkthroughs.accounts.title": "Cosmy Wasmy: Accounts",
    "cosmywasmy.walkthroughs.accounts.description": "Discover how to use Accounts in Cosmy Wasmy and what all it offers",
    "cosmywasmy.walkthroughs.accounts.addNew.title": "Add account",
    "cosmywasmy.walkthroughs.accounts.addNew.description": "Create a new key. You can import an existing seed phrase or generate a new one. \n[Add Account](command:cosmy-wasmy.addAccount)\n‚ùóEnsure you are not using your mainnet seed phrases. The seed phrase is stored in plain text by vscode",
    "cosmywasmy.walkthroughs.accounts.copyAddress.title": "Copy account address",
    "cosmywasmy.walkthroughs.accounts.copyAddress.description": "Right click on an account to get the option to copy the account address into your $(clippy) clipboard",
    "cosmywasmy.walkthroughs.accounts.copyMnemonic.title": "Copy account nnemonic",
    "cosmywasmy.walkthroughs.accounts.copyMnemonic.description": "Right click on an account to get the option to copy the account seed phrase into your $(clippy) clipboard",    
    "cosmywasmy.walkthroughs.accounts.requestFunds.title": "Request funds from faucet",
    "cosmywasmy.walkthroughs.accounts.requestFunds.description": "If a faucet has been configured in the chain config, you will see the ``Request Funds`` icon next to the account. You can click on the button to request funds from the faucet",    
    "cosmywasmy.walkthroughs.accounts.deleteAccount.title": "Delete account",
    "cosmywasmy.walkthroughs.accounts.deleteAccount.description": "Right click on an account to get the option to delete the account from the extension. \n‚ùóAccount is only removed from the Cosmy Wasmy vscode extension. The account and its state continues to persist on chain.",    
    "cosmywasmy.walkthroughs.accounts.refresh.title": "Refresh account view",
    "cosmywasmy.walkthroughs.accounts.refresh.description": "Click on the $(refresh) Refresh icon to refresh all the account balances. \n[Refresh Accounts](command:cosmy-wasmy.refreshAccount)",    

    "cosmywasmy.walkthroughs.contracts.title": "Cosmy Wasmy: Contracts",
    "cosmywasmy.walkthroughs.contracts.description": "Discover how to use Contracts in Cosmy Wasmy and what all it offers",
    "cosmywasmy.walkthroughs.contracts.import.title": "Import Contract",
    "cosmywasmy.walkthroughs.contracts.import.description": "Import a contract which have already been deployed by its bech32 address. \n[Import Contract](command:cosmy-wasmy.addContract)",
    "cosmywasmy.walkthroughs.contracts.notes.title": "Add notes",
    "cosmywasmy.walkthroughs.contracts.notes.description": "You can add personal notes and comments $(comment) to contracts. This information is only stored by the extension and is not stored on chain",
    "cosmywasmy.walkthroughs.contracts.copyAddr.title": "Copy contract address",
    "cosmywasmy.walkthroughs.contracts.copyAddr.description": "Right click on a contract to get the option to copy the address into your $(clippy) clipboard",
    "cosmywasmy.walkthroughs.contracts.checksum.title": "Retreive checksum",
    "cosmywasmy.walkthroughs.contracts.checksum.description": "If you would like to verify the checksum of any contract, you can right click on the contract to get the option to Display Checksum",
    "cosmywasmy.walkthroughs.contracts.binary.title": "Download contract binary",
    "cosmywasmy.walkthroughs.contracts.binary.description": "Right click on the contract in the Contract view to view the option to Download the contract binary. This will fetch the contract from the chain and store it locally at the root of your repository.",
    "cosmywasmy.walkthroughs.contracts.adminChange.title": "Update or clear admin",
    "cosmywasmy.walkthroughs.contracts.adminChange.description": "Right click on the contract to get the option to update the current contract admin or clear the contarct admin. You can only do this with the current contract admin account",
    "cosmywasmy.walkthroughs.contracts.deleteContract.title": "Delete contract",
    "cosmywasmy.walkthroughs.contracts.deleteContract.description": "Right click on an account to get the option to delete the contract from the extension. \n‚ùóContract is only removed from the Cosmy Wasmy vscode extension. The contract and its state continues to persist on chain.",
    "cosmywasmy.walkthroughs.contracts.upload.title": "Upload a new contract code",
    "cosmywasmy.walkthroughs.contracts.upload.description": "Select an account from the Account view to use to upload the contract. Click on the $(cloud-upload) upload contract icon or right click on a wasm binary file and click on ``Upload Contract`` menu item to upload the contract to the selected chain.",

    "cosmywasmy.walkthroughs.notebooks.title": "Cosmy Wasmy: CW Notebooks",
    "cosmywasmy.walkthroughs.notebooks.description": "Discover how to use CW Notebooks in Cosmy Wasmy",
    "cosmywasmy.walkthroughs.notebooks.new.title": "Create or open a CW Notebook",
    "cosmywasmy.walkthroughs.notebooks.new.description": "Right click in the file explorer and create a new file with an ``.cwnotebook`` extension. Or, open the [Command Palette](command:workbench.action.showCommands) and run the command \n\n[Create New CW Notebook](command:cosmy-wasmy.createCwNotebook)",
    "cosmywasmy.walkthroughs.notebooks.setup.title": "Setup your notebook",
    "cosmywasmy.walkthroughs.notebooks.setup.description": "You can setup which wasm binary and schema is used by the Cosmwasm VM in a TOML code block",
    "cosmywasmy.walkthroughs.notebooks.run.title": "Run your notebook",
    "cosmywasmy.walkthroughs.notebooks.run.description": "You can run the json blocks in the CW Notebook to execute against a Cosmwasm VM. You can instantiate contracts and query and execute messages",

    "cosmywasmy.walkthroughs.cosmwasm.title": "Cosmy Wasmy: Cosmwasm Interactions",
    "cosmywasmy.walkthroughs.cosmwasm.description": "Discover how to interact with Cosmwasm Contracts in Cosmy Wasmy",
    "cosmywasmy.walkthroughs.cosmwasm.initialize.title": "Initialize a contract",
    "cosmywasmy.walkthroughs.cosmwasm.initialize.description": "Once a contract has been uploaded you can initialize it using the sidebar. You need to select an account in the Account view which will be used to initialize the contract. You need to provide the Code Id and input message and optionally, any funds you might wanna send to the contract",
    "cosmywasmy.walkthroughs.cosmwasm.query.title": "Query a contract",
    "cosmywasmy.walkthroughs.cosmwasm.query.description": "Click on any contract in the Contract view and pass in input json in the Query view to run the given query against the selected contract",
    "cosmywasmy.walkthroughs.cosmwasm.execute.title": "Execute a contract",
    "cosmywasmy.walkthroughs.cosmwasm.execute.description": "Select a contract from the Contract view and an account from the Account view as currently active contract and account and input your execute json and click on ``Execute`` button to execute the contract tx.\nYou can also pass in funds if your contract requires any.\nThe response from the contract is shown in the Output channel and you can see the txHash in the notification.",
    "cosmywasmy.walkthroughs.cosmwasm.autocomplete.title": "Get JSON input autocomplete",
    "cosmywasmy.walkthroughs.cosmwasm.autocomplete.description": "Once your project has been loaded, run ``cargo schema`` to generate the json schema for the contract. Now open any new JSON file and you can get the json input auto complete for your contract. \nYou can click on the top right button on the JSON page to execute or query the smart contract right from the file",
    "cosmywasmy.walkthroughs.cosmwasm.history.title": "Get your past contract interactions",
    "cosmywasmy.walkthroughs.cosmwasm.history.description": "Based on the configured settings, you can choose to store your latest cosmwasm interactions like query and execute.\nClick in the $(history) on the ``Query`` or ``Execute`` view to load the history. The inputs of the interaction are stored and the historical interaction can be re-run from the History view"
}